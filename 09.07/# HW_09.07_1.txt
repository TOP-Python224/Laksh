Генераторы

  ==========  1  ==========

Напишите функцию генератор для создания упорядоченной колоды карт (52 карты). 
При вызове метода __next__() от объекта генератора должна быть представлена следующая карта.

Каждая карта представлена в виде кортежа: например, (2, 'пики'). 
    
    Номиналы: 1 — туз, 11 — валет, 12 — дама, 13 — король
    
    Порядок следования мастей: черви, бубны, пики, крести.

Реализуйте вторую функцию-генератор для получения перемешанной колоды.

    Подсказка: используйте функцию choice() из стандартной библиотеки модуля random



  ==========  2  ==========

В нейросетевых вычислениях широко испольузются перестановки некоторого множества элементов.

    Перестановки — это комбинации из n различных элементов, отличающиеся позициями элементов. Количество перестановок P = n!

        для 2 элементов a, b: 
            ab ba
        для 3 элементов a, b, c: 
            abc bca cab acb cba bac

Напишите функцию-генератор, принимающую на вход не пустое множество set, и возвращающую в строковом виде перестановки для элементов этого множества.

Не используйте в своём генераторе функцию permutations() из модуля стандартной библиотеки itertools. Но можете использовать её для проверки правильности работы своего генератора.

Пример:
    
    def perms(...):
        """Генерирует перестановки для переданного множества элементов."""
    
    letters = {'a', 'r', 't'}
    generator = perms(letters)
    print(*list(generator))

    # stdout:
    # art rta tar atr tra rat



  =========================

Код каждой решённой задачи помещается в текущий каталог репозитория в виде отдельного файла с именем, соответствующем номеру задачи.

Функции обязательно документируются.
Параметры функций обязательно аннотируются.

Все файлы выполняются с помощью интерпретатора.
Текстовый вывод в стандартный поток stdout копируется.
Копия вывода в виде комментария помещается в конец файла с кодом задачи.

В сервис Журнал отправляется сообщение о выполнении задания со ссылкой на репозиторий.

Преподаватель пишет комментарии и правки в коде задач и обновляет файлы в удалённом репозитории.
Проверяйте обновления в своём репозитории каждый день.