Шаблон проектирования: Хранитель

  ==========  1  ==========

В файле chess.py находится реализация ООП модели основных сущностей для игры шахматы. 
Диаграмма классов модели в файле chess.png

Внимательно изучите код и взаимиодействие объектов между собой.

Реализуйте класс-хранитель Turn.

    В нём должна сохраняться информация:
      — о фигуре, сделавшей ход
      — о клетке, с которой был сделан ход
      — о клетке, на которую был сделан ход.

Реализуйте класс Game, который будет совмещать функции инициатора и опекуна.

    С помощью этого класса у вас должны быть возможности: 
      — управлять экземпляром игровой доски
      — совершать ходы с клетки на клетку
      — хранить историю ходов
      — выводить все записанные ходы, нумерованные с единицы
      — возвращаться к началу заданного хода.

Классы Turn и Game должны быть согласованы с существующей объектной моделью.

Можно использовать импорт из файла chess.py



  =========================

Код каждой решённой задачи помещается в текущий каталог репозитория в виде отдельного файла с именем, соответствующем номеру задачи.

Функции, классы и методы (кроме "магических") документируются.
Параметры функций и методов (кроме self) аннотируются.

Все файлы выполняются с помощью интерпретатора.
Текстовый вывод в стандартный поток stdout копируется.
Копия вывода в виде комментария помещается в конец файла с кодом задачи.

В сервис Журнал отправляется сообщение о выполнении задания со ссылкой на репозиторий.

Преподаватель пишет комментарии и правки в коде задач и обновляет файлы в удалённом репозитории.
Проверяйте обновления в своём репозитории каждый день.