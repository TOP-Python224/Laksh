Наследование

  ==========  1  ==========

Реализуйте классы Person, Student и Employee согласно диаграмме классов в файле # 1.dia

Все атрибуты всех классов должны заполняться значениями, переданными в конструктор.

Метод is_educating() должен проверять, является ли человек студентом. 
Метод is_employed() должен проверять, является ли человек трудоустроенным.

Создайте экземпляры классов и продемонстрируйте работу методов.

Подсказка 1: в UML диаграммах повторение атрибута из базового класса в подклассе говорит о необходимости переопределения данного атрибута

Подсказка 2: не забывайте о возможности вызова метода родительского класса с помощью встроенной функции super() — избегайте дублирования кода



  ==========  2  ==========

Реализуйте классы Point, Line и Polygon согласно диаграмме классов в файле # 2.dia

Класс Point описывает точку на плоскости в декартовой систме координат.

Класс Line описывает отрезок, задаваемый двумя точками на плоскости в декартовой системе координат. В его атрибуты start и end записываются экземпляры Point.

    Свойство length вычисляет и возвращает длину отрезка как расстояние между двумя точками.

Класс Polygon описывает многоугольник, задаваемый отрезками на плоскости в декартовой системе координат. Является списком отрезков — экземпляров Line.

    Частный (private) метод is_closed() проверяет, замкнут ли многоугольник. То есть, совпадают ли попарно точка окончания одного и точка начала следующего отрезков.
    
    Свойство perimeter вычисляет и возвращает периметр многоугольника как сумму длин отрезков его составляющих, при условии что многоугольник замкнут.

Сигнатуры конструкторов классов формируются в соответствии с диаграммой.

Подсказка: связи с пустым ромбом на одном конце называются агрегациями и обозначают, что экземпляр одного класса тем или иным образом включает в себя экземпляр другого класса. Подробнее о диаграммах классов UML можно прочитать здесь: http://book.uml3.ru/sec_3_2. Написано много, умно и сложно, поэтому пока рекомендую читать секциями. Сейчас вам нужны секции 3.2.1, 3.2.2, 3.2.3, 3.3.2, 3.3.4 и 3.3.5



  =========================

Код каждой решённой задачи помещается в текущий каталог репозитория в виде отдельного файла с именем, соответствующем номеру задачи.

Функции, классы и методы (кроме "магических") документируются.
Параметры функций и методов (кроме self) аннотируются.

В сервис Журнал отправляется сообщение о выполнении задания со ссылкой на репозиторий.

Преподаватель пишет комментарии и правки в коде задач и обновляет файлы в удалённом репозитории.
Проверяйте обновления в своём репозитории каждый день.