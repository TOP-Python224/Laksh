Множества, операции над множествами, представления множеств

Не забывайте читать документацию:
https://docs.python.org/3/library/stdtypes.html#set

  ==========  1  ==========

Даны два списка, содержащие целые числа.
Необходимо написать программу, которая удаляет из обоих списков пересекающиеся элементы – то есть элементы, представленные в обоих списках

Подсказка: заполните входные списки используя представления списков и функцию randrange() из модуля random

    from random import randrange



  ==========  2  ==========
  
На вход программе подаётся строка. Необходимо определить, содержит ли эта строка двоичное число.

Строка, содержащая двоичное число, может выглядеть как '0100101', либо 'b0110', либо '0b01001110' (число разрядов двоичного числа может отличаться)

Выведите "ДА", если строка содержит двоичное число, или "НЕТ" в противном случае.



  ==========  3  ==========

Составьте программу для регистронезависимого частотного анализа букв в тексте в зависимости от длины слова, в котором встречается буква

Необходимо составить словарь, ключами в котором будут буквы. Значениями будут вложенные словари.
Ключи вложенных словарей должны представлять из себя длины слов, в которых встречается эта буква. Значения вложенных словарей являются частотой, с которой соответствующая буква – ключ для данного вложенного словаря – встречается в словах соответствующей длины (не считая повторов буквы в слове).

Пример:
    {..., 'ф': {4: 6, 5: 6, 6: 38, 7: 10, 8: 1, 9: 1}, ...}

Выведите итоговый словарь с помощью функции pprint() из модуля pprint

    from pprint import pprint

Подсказка 1: в качестве входного текста можно взять поэму из файла words_from_text.py

Подсказка 2: чтобы избавиться от знаков препинания воспользуйтесь множествами и строкой whitespace из модуля string

    from string import whitespace



  =========================

Код каждой решённой задачи помещается в текущий каталог репозитория в виде отдельного файла с именем, соответствующем номеру задачи.

Все файлы выполняются с помощью интерпретатора.
Текстовый вывод в стандартный поток stdout копируется.
Копия вывода в виде комментария помещается в конец файла с кодом задачи.

В сервис Журнал отправляется сообщение о выполнении задания со ссылкой на репозиторий.

Преподаватель пишет комментарии и правки в коде задач и обновляет файлы в удалённом репозитории.
Проверяйте обновления в своём репозитории каждый день.