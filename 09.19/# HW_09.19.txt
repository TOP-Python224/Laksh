Работа с файлами: ввод/вывод. Модуль pathlib

Документация:
    Чтение/запись файлов
        https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files
        
    Функция open()
        https://docs.python.org/3/library/functions.html#open
    
    Модуль pathlib
        https://docs.python.org/3/library/pathlib.html#basic-use

  ==========  1  ==========

Напишите свою функцию, которая читает .csv файл в словарь по столбцам.

Функция принимает два аргумента:
    имя файла: str | Path
    разделитель: str
        ',' по умолчанию
        ';'
        '\t'

Значения первой строки файла становятся ключами словаря, значения из следующих строк становятся элементами списка – значения в словаре.

Пример, test.csv:
    col1,col2,col3
    1,10,100
    2,20,200
    3,30,300

Пример вывода:
    >>> csv_dict('test.csv', ',')
    {'col1': [1, 2, 3], 'col2': [10, 20, 30], 'col3': [100, 200, 300]}



  ==========  2  ==========

Используя средства из модуля pathlib написать функцию, которая возвращает кортеж имён файлов (не каталогов) в каталоге по переданному в stdin пути.

Пример (windows cmd):
    D:\TestFolder> dir /b
    Folder1
    Folder2
    file1.txt
    file2.csv
    file3.zip
    
    D:\TestFolder> py 3.2.py
    path: D:\TestFolder
    ('file1.txt', 'file2.csv', 'file3.zip')



  ==========  3  ==========

Есть файл с ключевыми словами: "# keywords.txt"
Есть каталог "# TestFolder", содержащий различные файлы, включая тестовые

Необходимо осуществить поиск ключевых слов по текстовым файлам в каталоге.
Необходимо сохранить те строки из текстовых файлов, в которых найдено любое из ключевых слов. Строками в текстовом файле считается подстрока от символа конца строки (или от начала файла) до символа конца строки (или до конца файла).

Допускать совпадения словоформ: например, "аккордов" считается совпадением для ключевого слова "аккорд".

Реализовать возможность сохранить контекст – n строк перед и n строк после строки, содержащей ключевое слово.

Формат сохранения:
    {
        'filename': str     # имя файла
        'line_number': int  # номер строки с ключевым словом
        'keyword': str      # ключевое слово
        'context': int      # количество строк до/после ключевой (по умолчанию 0)
        'text': str         # найденная строка – строки, если поиск включал контекст
    }

После обработки всех файлов у вас должен быть список словарей с найденными фрагментами.

Самостоятельно продумайте структуру кода: какие и сколько должно быть функций, их параметры и возвращаемые значения.
Развёрнуто аргументируйте свои решения в комментариях.



  =========================

Код каждой решённой задачи помещается в текущий каталог репозитория в виде отдельного файла с именем, соответствующем номеру задачи.

Функции обязательно документируются.
Параметры функций обязательно аннотируются.

Все файлы выполняются с помощью интерпретатора.
Текстовый вывод в стандартный поток stdout копируется.
Копия вывода в виде комментария помещается в конец файла с кодом задачи.

В сервис Журнал отправляется сообщение о выполнении задания со ссылкой на репозиторий.

Преподаватель пишет комментарии и правки в коде задач и обновляет файлы в удалённом репозитории.
Проверяйте обновления в своём репозитории каждый день.