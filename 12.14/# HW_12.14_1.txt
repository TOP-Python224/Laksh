Шаблоны проектирования: Адаптер

  ==========  1  ==========

У нас есть две системы для работы с текстом. 

Первая система обрабатывает тексты, используя парсер. Парсер принимает конкретный текст, чистит его а также может использовать разные обработчики для дальнейшей работы с текстом.

Задачей второй системы является только быстрый подсчёт частотности слов в любом тексте.

Системы независимы друг от друга и несовместимы.

Напишите адаптер, который позволит парсеру выводить текст в порядке частотности слов, используя при этом метод(-ы) счётчика.


class TextParser:
    """Парсер текстовых данных в некой системе."""
    def __init__(self, text: str):
        tmp = re.sub(r'\W', ' ', text.lower())
        tmp = re.sub(r' +', ' ', tmp).strip()
        self.text = tmp
    
    def get_processed_text(self, processor) -> None:
        """Вызывает метод класса обработчика.
        
        :param processor: экземпляр класса обработчика
        """
        result = processor.process_text(self.text)
        print(*result, sep='\n')


class WordCounter: 
    """Счётчик частотности слов в тексте."""
    def __init__(self, text: str) -> None:
        """Обрабатывает переданный текст и создаёт словарь с частотой слов."""
        self.__words = dict()
        for word in text.split():
            self.__words[word] = self.__words.get(word, 0) + 1
            
    def get_count(self, word: str) -> int:
        """Возвращает частоту переданного слова."""
        return self.__words.get(word, 0)
        
    def get_all_words(self) -> dict[str, int]:
        """Возвращает словарь с частотой слов."""
        return self.__words.copy()



  =========================

Код каждой решённой задачи помещается в текущий каталог репозитория в виде отдельного файла с именем, соответствующем номеру задачи.

Функции, классы и методы (кроме "магических") документируются.
Параметры функций и методов (кроме self) аннотируются.

В сервис Журнал отправляется сообщение о выполнении задания со ссылкой на репозиторий.

Преподаватель пишет комментарии и правки в коде задач и обновляет файлы в удалённом репозитории.
Проверяйте обновления в своём репозитории каждый день.