Работа с объектными моделями

  ==========  1  ==========

Реализуйте в коде объектную модель университета.

Описание модели содержится в репозитории _scripts в файле oop/university.puml

    С помощью данного файла можно построить графическую диаграмму модели классов с помощью бесплатного плагина PlantUML к среде разработки PyCharm.

        Установка плагина осуществляется через окно Settings в разделе Plugins: на вкладке Marketplace в строке поиска ввести название плагина и в строке с соответствующим пунктом нажать кнопку Install.

Создайте все перечисленные классы, пропишите нужные атрибуты.

Не забывайте про декоратор dataclass из модуля dataclasses. Используйте декоратор для тех классов, где нет необходимости прописывать сложный конструктор.

В соответствии с моделью пропишите связи наследования.



  ==========  2  ==========

Далее, в новом файле, соответствующем задаче, осуществите импорт модуля из файла предыдущей задачи.

    Импорт модуля по указанному пути к файлу может осуществляться с помощью функций из библиотеки importlib.
    
    Это полезно когда, например, имя файла начинается с цифры и нет возможности воспользоваться инструкцией import.
    
    Пример такого импорта находится в репозитории _scripts в файле direct_file_import.py, из которого импортируется модуль в расположенном в том же каталоге файле 1.py


Создайте набор тестовых экземпляров для каждого из созданных классов.
Скомбинируйте их в соответствии с агрегацией и композицией в модели.



  =========================

Код каждой решённой задачи помещается в текущий каталог репозитория в виде отдельного файла с именем, соответствующем номеру задачи.

Функции, классы и методы (кроме "магических") документируются.
Параметры функций и методов (кроме self) аннотируются.

В сервис Журнал отправляется сообщение о выполнении задания со ссылкой на репозиторий.

Преподаватель пишет комментарии и правки в коде задач и обновляет файлы в удалённом репозитории.
Проверяйте обновления в своём репозитории каждый день.